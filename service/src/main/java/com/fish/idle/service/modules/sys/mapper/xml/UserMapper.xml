<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fish.idle.service.modules.sys.mapper.UserMapper">

    <sql id="userColumns">login_name,name,password,rights,del_flag,role_id</sql>
    <!-- 判断用户名和密码 -->
    <select id="getUserInfo" parameterType="PageData" resultType="PageData" useCache="false">
        select
        user_id userId,
        login_name loginName,
        password,
        name,
        last_login lastLogin,
        ip,
        del_flag,
        skin,
        email,
        phone
        from sys_user
        where 1=1
        <if test="pd.loginName != null and pd.password != null">
            and (
            (login_name = #{pd.loginName} and password = #{pd.password})
            or
            (email = #{pd.loginName} and password = #{pd.password})
            ) and del_flag != -1
        </if>
        <if test="pd.userId != null">
            and user_id = #{pd.userId}
        </if>
    </select>

    <update id="updateLastLogin" parameterType="User">
    update sys_user set
    last_login=#{lastLogin}
    where user_id=#{userId}
  </update>

    <select id="count" parameterType="PageData" resultType="int">
        select count(1)
        from sys_user u
        where u.del_flag != -1
        <if test="keyword != null and keyword != ''">
            and CONCAT(IFNULL(u.login_name,''),IFNULL(u.name,'')) like #{keyword}
        </if>
        <if test="keyword != null and keyword != ''">
            and CONCAT(IFNULL(u.login_name,''),IFNULL(u.name,'')) like #{keyword}
        </if>

    </select>

    <select id="list" parameterType="PageData" resultType="PageData">
        select u.user_id userId,
        u.login_name loginName,
        u.password,
        u.name,
        u.last_login lastLogin,
        u.ip,
        u.del_flag,
        u.description,
        u.email,
        u.phone,
        u.skin
        from sys_user u
        where u.del_flag != -1
        <if test="keyword != null and keyword != ''">
            and CONCAT(IFNULL(u.login_name,''),IFNULL(u.name,'')) like #{keyword}
        </if>
        limit #{from},#{size}
    </select>

    <insert id="add" parameterType="PageData" useGeneratedKeys="true" keyProperty="userId">
        insert into sys_user (
        login_name,
        password,
        name,
        del_flag,
        description,
        email,
        phone,
        open_id
        ) values (
        #{loginName},
        #{password},
        #{name},
        #{delFlag},
        #{description},
        #{email},
        #{phone},
        #{openId}
        )
  </insert>

    <select id="getById" parameterType="Integer" resultType="PageData">
    select
    user_id userId,
    login_name loginName,
    password,
    name,
    last_login lastLogin,
    ip,
    del_flag,
    description,
    email,
    phone,
    skin
    from sys_user
    where del_flag != -1
    and user_id = #{userId}
  </select>

    <select id="getByName" parameterType="String" resultType="PageData">
    select
    user_id
    from
    sys_user
    where del_flag != -1
    and	login_name = #{login_name}
  </select>

    <update id="edit" parameterType="PageData">
        update sys_user set
        <if test="password != null and password != ''">
            password = #{password},
        </if>
        name = #{name},
        description = #{description},
        email = #{email},
        phone = #{phone},
        where
        user_id = #{userId}
    </update>

    <update id="updatePassword" parameterType="PageData">
    update sys_user set
    password	= #{newEncodePwd}
    where
    user_id		= #{userId}
  </update>

    <update id="delete" parameterType="Integer">
    update sys_user set
    del_flag	= -1
    where
    user_id	= #{userId}
  </update>

    <update id="batchDelete" parameterType="java.util.List">
        update sys_user set
        del_flag = -1
        where

        user_id in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="listUserRoleByUserId" parameterType="Integer" resultType="UserRole">
    select
    id,
    user_id,
    role_id
    from sys_user_role
    where user_id = #{userId}
  </select>
    <select id="getByOpenId" resultType="PageData" parameterType="String">
        select
        user_id userId,
        login_name loginName,
        password,
        name,
        last_login lastLogin,
        ip,
        del_flag,
        skin,
        email,
        phone,
        open_id openId
        from sys_user where open_id = #{openId};
    </select>

    <delete id="deleteUserRoleByUserId" parameterType="Integer">
    delete from sys_user_role where user_id = #{userId}
  </delete>

    <insert id="saveUserRoles" parameterType="java.util.List">
        insert into sys_user_role (
        user_id,
        role_id
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userId},#{item.roleId})
        </foreach>
    </insert>
</mapper>