<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!--属性占位文件引入，可以通过${属性名}获得属性文件中的内容 -->
	<context:property-placeholder location="classpath:properties/override.properties" />

	<!--定义一个jdbc数据源，创建一个驱动管理数据源的bean -->

	<!-- 阿里 druid数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
		<property name="driverClassName" value="${driverClassName}"/>
		<property name="filters" value="${filters}"/>
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${maxActive}"/>
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${initialSize}"/>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${maxWait}"/>
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${minIdle}"/>
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
		<property name="validationQuery" value="${validationQuery}"/>
		<property name="testWhileIdle" value="${testWhileIdle}"/>
		<property name="testOnBorrow" value="${testOnBorrow}"/>
		<property name="testOnReturn" value="${testOnReturn}"/>
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"/>
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="${removeAbandoned}"/>
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${logAbandoned}"/>
	</bean>

	<!--创建一个sql会话工厂bean，指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!--类型别名包，默认引入com.fish.idle.entity下的所有类 -->
		<property name="typeAliasesPackage" >
			<value>com.fish.idle.service.entity</value>
		</property>
		<!--指定sql映射xml文件的路径 -->
		<property name="mapperLocations"
			value="classpath:mybatis/*.xml"></property>
	</bean>

	<!--自动扫描映射接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定sql会话工厂，在上面配置过的 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!-- 指定基础包，即自动扫描com.fish.idle..mapper这个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage" value="com.fish.idle.service.mapper"></property>
	</bean>

	<!-- 创建一个sqlSession对象 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>


	<!--声明式事务管理 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--声明支持使用注解管理事务 -->
	<tx:annotation-driven transaction-manager="txManager"/>

	<!--自动扫描组件 -->
	<context:component-scan base-package="com.fish.idle.service.">
	    <context:exclude-filter type="aspectj" expression="com.fish.idle.service.mapper.*"/>
	</context:component-scan>
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
</beans>
